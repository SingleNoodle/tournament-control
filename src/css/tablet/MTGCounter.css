:root {
  --enable-panel-rotation: 1;
  /* 1 for enabled, 0 for disabled */
}


.tablet-container {
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  position: relative;
  display: flex;
  flex-direction: column;
}

.split-screen {
  flex: 1;
  display: grid;
  gap: 0.5rem;
  /* Reduce gap */
  padding: 0.5rem;
  /* Reduce padding */
  height: calc(100vh - 60px);
  /* Account for game-controls height */
  width: 100%;
  box-sizing: border-box;
  overflow: hidden;
  /* Prevent scrolling */
}

/* Grid layouts */
.grid-2-players {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-2-players .panel-1 {
  transform: rotate(calc(90deg * var(--enable-panel-rotation)));
}

.grid-2-players .panel-2 {
  transform: rotate(calc(-90deg * var(--enable-panel-rotation)));
}

.commander-damage-grid.player-count-2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 0.5rem;
}

.commander-damage-grid.player-count-2 .commander-damage-counter:nth-child(2) {
  grid-area: 1 / 1 / 2 / 3;  /* First row, span both columns */
}

.commander-damage-grid.player-count-2 .commander-damage-counter:nth-child(1) {
  grid-area: 2 / 1 / 3 / 3;  /* Second row, span both columns */
}
.grid-3-players {
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-template-areas:
    "panel1 panel3"
    "panel2 panel3";
}

/* Rotation and positioning for 3 players */
.grid-3-players .panel-1 {
  grid-area: panel1;
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-3-players .panel-2 {
  grid-area: panel2;
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.grid-3-players .panel-3 {
  grid-area: panel3;
  transform: rotate(calc(-90deg * var(--enable-panel-rotation)));
}

.commander-damage-grid.player-count-3 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 0.5rem;
}

/* Override for specific commander damage counters in 3-player mode */
.commander-damage-grid.player-count-3 .commander-damage-counter:nth-child(1) {
  grid-area: 1 / 1 / 2 / 2;  /* First row, first column */
}

.commander-damage-grid.player-count-3 .commander-damage-counter:nth-child(2) {
  grid-area: 2 / 1 / 3 / 2;  /* Second row, first column */
}

.commander-damage-grid.player-count-3 .commander-damage-counter:nth-child(3) {
  grid-area: 1 / 2 / 3 / 3;  /* First row to last row, second column */
}

.grid-4-players {
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-4-players .panel-1 {
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-4-players .panel-2 {
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-4-players .panel-3 {
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.grid-4-players .panel-4 {
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.commander-damage-grid.player-count-4 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 0.5rem;
}

/* For panels 1-2 (upside down) */
.panel-1 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(1),
.panel-2 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(1) {
  grid-area: 2 / 2 / 3 / 3;  /* Bottom right */
}

.panel-1 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(2),
.panel-2 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(2) {
  grid-area: 2 / 1 / 3 / 2;  /* Bottom left */
}

.panel-1 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(3),
.panel-2 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(3) {
  grid-area: 1 / 2 / 2 / 3;  /* Top right */
}

.panel-1 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(4),
.panel-2 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(4) {
  grid-area: 1 / 1 / 2 / 2;  /* Top left */
}

/* For panels 3-4 (right side up) */
.panel-3 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(1),
.panel-4 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(1) {
  grid-area: 1 / 1 / 2 / 2;  /* Top left */
}

.panel-3 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(2),
.panel-4 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(2) {
  grid-area: 1 / 2 / 2 / 3;  /* Top right */
}

.panel-3 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(3),
.panel-4 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(3) {
  grid-area: 2 / 1 / 3 / 2;  /* Bottom left */
}

.panel-3 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(4),
.panel-4 .commander-damage-grid.player-count-4 .commander-damage-counter:nth-child(4) {
  grid-area: 2 / 2 / 3 / 3;  /* Bottom right */
}

.grid-5-players {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-template-areas:
    "panel1 panel2 panel3"
    "panel4 panel5 panel3";
}

/* Rotation and positioning for 5 players */
.grid-5-players .panel-1 {
  grid-area: panel1;
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-5-players .panel-2 {
  grid-area: panel2;
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-5-players .panel-3 {
  grid-area: panel3;
  transform: rotate(calc(270deg * var(--enable-panel-rotation)));
}

.grid-5-players .panel-4 {
  grid-area: panel4;
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.grid-5-players .panel-5 {
  grid-area: panel5;
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.commander-damage-grid.player-count-5 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 0.5rem;
}

/* Override for specific commander damage counters in 5-player mode */
.commander-damage-grid.player-count-5 .commander-damage-counter:nth-child(1) {
  grid-area: 1 / 1 / 2 / 2;  /* First row, first column */
}

.commander-damage-grid.player-count-5 .commander-damage-counter:nth-child(2) {
  grid-area: 1 / 2 / 2 / 3;  /* First row, second column */
}

.commander-damage-grid.player-count-5 .commander-damage-counter:nth-child(3) {
  grid-area: 1 / 3 / 3 / 4;  /* First row to last row, third column */
}

.commander-damage-grid.player-count-5 .commander-damage-counter:nth-child(4) {
  grid-area: 2 / 1 / 3 / 2;  /* Second row, first column */
}

.commander-damage-grid.player-count-5 .commander-damage-counter:nth-child(5) {
  grid-area: 2 / 2 / 3 / 3;  /* Second row, second column */
}

.grid-6-players {
  grid-template-columns: repeat(3, minmax(0, 1fr));
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-6-players .panel-1 {
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-6-players .panel-2 {
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-6-players .panel-3 {
  transform: rotate(calc(180deg * var(--enable-panel-rotation)));
}

.grid-6-players .panel-4 {
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.grid-6-players .panel-5 {
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

.grid-6-players .panel-6 {
  transform: rotate(calc(0deg * var(--enable-panel-rotation)));
}

/* 6 player layout - 3x2 grid */
.commander-damage-grid.player-count-6 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 0.5rem;
}

/* For panels 1-3 (upside down) */
.panel-1 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(1),
.panel-2 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(1),
.panel-3 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(1) {
  grid-area: 2 / 3 / 3 / 4;  /* Second row, third column */
}

.panel-1 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(2),
.panel-2 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(2),
.panel-3 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(2) {
  grid-area: 2 / 2 / 3 / 3;  /* Second row, second column */
}

.panel-1 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(3),
.panel-2 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(3),
.panel-3 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(3) {
  grid-area: 2 / 1 / 3 / 2;  /* Second row, first column */
}

.panel-1 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(4),
.panel-2 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(4),
.panel-3 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(4) {
  grid-area: 1 / 3 / 2 / 4;  /* First row, third column */
}

.panel-1 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(5),
.panel-2 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(5),
.panel-3 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(5) {
  grid-area: 1 / 2 / 2 / 3;  /* First row, second column */
}

.panel-1 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(6),
.panel-2 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(6),
.panel-3 .commander-damage-grid.player-count-6 .commander-damage-counter:nth-child(6) {
  grid-area: 1 / 1 / 2 / 2;  /* First row, first column */
}

.panel {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow-y: auto;
  transition: all 0.3s ease-in-out;
  width: 100%;
  box-sizing: border-box;
  max-width: 100%;
  min-height: 100px;
  /* Reduce minimum height */
  padding: 0.5rem;
  /* Reduce padding */
  height: 100%;
  /* Fill available space */
  overflow: hidden;
  /* Prevent scrolling */
  transform-origin: center center;
}

.panel.active {
  outline: 3px solid #4CAF50;
}

.panel.selected {
  outline: 3px solid #4CAF50;
}

.panel>* {
  transform: rotate(calc(-1 * var(--enable-panel-rotation) * inherit));
}

.login-page {
  max-width: 400px;
  margin: 40px auto;
  padding: 20px;
}

.login-page form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.login-page input {
  width: 100%;
  padding: 8px;
  margin-top: 8px;
}

.login-page button {
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.guest-button {
  margin-top: 1rem;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  background-color: #f0f0f0;
  cursor: pointer;
  transition: background-color 0.2s;
}

.guest-button:hover {
  background-color: #e0e0e0;
}

.logout-button {
  margin-top: 1rem;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  background-color: #dc3545;
  color: white;
  cursor: pointer;
  transition: background-color 0.2s;
}

.logout-button:hover {
  background-color: #c82333;
}

.logged-in-view {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
}

.logged-in-view h2 {
  margin: 0;
  color: #333;
}

.logged-in-view .logout-button {
  margin-top: 2rem;
  padding: 0.5rem 1rem;
  background-color: #dc3545;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.logged-in-view .logout-button:hover {
  background-color: #c82333;
}

.login-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  width: 100%;
  max-width: 100%;
  padding: 0.5rem;
  box-sizing: border-box;
}

/* QR Code container */
.login-container .qrcode {
  max-width: 100%;
  height: auto;
}

/* Make URLs wrap */
.login-container p {
  word-break: break-all;
  max-width: 100%;
}

.game-controls {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.1);
  /* backdrop-filter: blur(5px); */
  display: flex;
  justify-content: center;
  z-index: 100;
  height: 60px;
  /* Fixed height */
  padding: 0.5rem;
  /* clickthrough*/
  /* pointer-events: none; */
}

.start-button {
  padding: 15px 30px;
  font-size: 1.2em;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.start-button:hover {
  background-color: #45a049;
}

.game-status {
  margin: 10px 0;
  font-weight: bold;
  text-transform: capitalize;
}

.selected-message {
  color: #2ecc71;
  font-weight: bold;
  margin: 10px 0;
}

.player-header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  padding: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}


.life-display {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.life-number {
  font-size: 72px;
  font-weight: bold;
}

.delta {
  position: absolute;
  top: -20px;
  right: -20px;
  font-size: 24px;
  opacity: 1;
  animation: fadeOut 5s ease-out;
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  70% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

.delta.positive {
  color: #2ecc71;
}

.delta.negative {
  color: #e74c3c;
}

.panel {
  position: relative;
}

.player-info {
  height: 100%;
}

.life-counter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  padding: 20px;
  gap: 1rem;
  /* Add gap between elements */
}

.minus,
.plus {
  width: 10em;
  /* Changed to em units */
  height: 10em;
  /* Changed to em units to maintain square shape */
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: clamp(24px, 5vw, 48px);
  background: transparent;
  border: none;
  color: inherit;
  opacity: 0.8;
  transition: opacity 0.2s;
  user-select: none;
}

.minus:hover,
.plus:hover {
  opacity: 1;
  background: transparent;
}

.minus:before {
  content: "−";
  /* Using proper minus sign */
}

.plus:before {
  content: "+";
}

.life-display {
  flex: 1;
  text-align: center;
  position: relative;
}

.life-number {
  font-size: 72px;
  font-weight: bold;
}

.player-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  padding: 20px;
}

.player-name {
  font-size: 32px;
  margin-bottom: 20px;
  text-align: center;
  transform: translate(0, 40px);
}

.end-button {
  background-color: #e74c3c;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  margin-top: 20px;
}

.end-button:hover {
  background-color: #c0392b;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4);
  }

  70% {
    box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
  }
}

@media screen and (max-height: 768px) {
  .panel {
    min-height: 80px;
    /* Even smaller for small screens */
  }

  .login-container {
    gap: 0.25rem;
  }

  .login-container .qrcode {
    width: 100px !important;
    height: 100px !important;
  }
}

.player-rank {
  display: inline-block;
  margin-left: 1rem;
  padding: 0.25rem 0.5rem;
  background: rgba(255, 215, 0, 0.2);
  border-radius: 4px;
  font-size: 0.8em;
}

.final-stats {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: 1rem;
}

.final-life {
  font-size: 2rem;
  font-weight: bold;
}

.final-life.dead {
  color: #e74c3c;
}

.life-number.dead {
  color: #e74c3c;
}

.commander-damage-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 8px;
  margin-top: 10px;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  transform: translate(0px, -100px);
}

.commander-damage-counter {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: rgba(0, 0, 0, 0.2);
  padding: 4px 8px;
  border-radius: 4px;
}

.commander-label {
  font-size: 0.9em;
  font-weight: 500;
  padding: 0 4px;
}

.damage-controls {
  display: flex;
  align-items: center;
  gap: 4px;
}

.damage-amount {
  min-width: 20px;
  text-align: center;
  font-weight: bold;
  font-size: 0.9em;
}

.commander-damage-counter button {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: none;
  background: #444;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9em;
}